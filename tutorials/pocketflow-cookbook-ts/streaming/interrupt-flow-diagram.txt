🌊 STREAMNODE INTERRUPT & STREAMING FLOW
==========================================

📍 COMPONENT SETUP
┌─────────────────────────────────────────────────────────────────┐
│  StreamNode Constructor                                         │
│  ┌─────────────────┐    ┌─────────────────┐                   │
│  │ readline.Interface │    │ interrupted: false │                │
│  │ (stdin/stdout)     │    │ (boolean flag)     │                │
│  └─────────────────┘    └─────────────────┘                   │
└─────────────────────────────────────────────────────────────────┘

📍 INTERRUPT LISTENER SETUP (in prep phase)
┌─────────────────────────────────────────────────────────────────┐
│  setupInterruptListener()                                       │
│                                                                 │
│  this.rl.on('line', () => {           ← User presses ENTER     │
│    this.interrupted = true;           ← Set instance flag      │
│    shared.interrupted = true;         ← Set shared flag        │
│    console.log('🛑 Interrupt...');    ← Visual feedback        │
│  });                                                            │
└─────────────────────────────────────────────────────────────────┘

📍 STREAMING EXECUTION FLOW
┌─────────────────────────────────────────────────────────────────┐
│                         STREAMING LOOP                         │
│                                                                 │
│  🔄 FOR EACH CHUNK:                                             │
│                                                                 │
│  1️⃣ Check Interrupt                                             │
│     if (shouldStop()) break;  ← shouldStop = () => interrupted │
│                                                                 │
│  2️⃣ Process Chunk                                               │
│     onChunk(content)          ← Display character immediately  │
│                                                                 │
│  3️⃣ Continue or Exit                                            │
│     Next iteration OR Break if interrupted                     │
│                                                                 │
└─────────────────────────────────────────────────────────────────┘

📍 REAL-TIME EVENT COORDINATION
┌─────────────────────────────────────────────────────────────────┐
│                                                                 │
│  USER INPUT THREAD          STREAMING THREAD                   │
│  ┌─────────────┐            ┌─────────────────┐                │
│  │  Terminal   │            │ LLM Stream      │                │
│  │             │            │                 │                │
│  │ [ENTER] ────┼──────────→ │ shouldStop() ───┼──→ Break Loop  │
│  │             │            │                 │                │
│  │             │            │ onChunk() ──────┼──→ Display     │
│  └─────────────┘            └─────────────────┘                │
│                                                                 │
│  🔄 COMMUNICATION VIA: this.interrupted boolean flag           │
│                                                                 │
└─────────────────────────────────────────────────────────────────┘

📍 CHUNK STREAMING DETAIL
┌─────────────────────────────────────────────────────────────────┐
│                                                                 │
│  📦 CHUNK ARRIVES                                               │
│         │                                                       │
│         ▼                                                       │
│  🔍 CHECK: shouldStop()                                         │
│         │                                                       │
│    ┌────▼────┐                                                  │
│    │ false   │                                                  │
│    │(continue)│                                                  │
│    └────┬────┘                                                  │
│         │                                                       │
│         ▼                                                       │
│  📺 onChunk(content)                                            │
│         │                                                       │
│         ▼                                                       │
│  🖥️ process.stdout.write(content)  ← Character appears         │
│         │                                                       │
│         ▼                                                       │
│  🔄 Next chunk...                                               │
│                                                                 │
│  OR:                                                            │
│    ┌────────┐                                                   │
│    │ true   │                                                   │
│    │(stop)  │                                                   │
│    └────┬───┘                                                   │
│         │                                                       │
│         ▼                                                       │
│  🛑 break; (exit loop)                                          │
│                                                                 │
└─────────────────────────────────────────────────────────────────┘

📍 TIMING DIAGRAM
┌─────────────────────────────────────────────────────────────────┐
│                                                                 │
│  Time:  0ms   100ms  200ms  300ms  400ms  500ms               │
│         │     │     │     │     │     │                       │
│  Stream: █     █     █     █     █                             │
│  Chunks: H     e     l     l     o                             │
│  Display:H     e     l     l     o     ← Real-time display     │
│                                                                 │
│  User:                     🔴 ENTER                            │
│  Flag:                     ┗━━━━━ interrupted = true            │
│  Result:                         🛑 Stream stops               │
│                                                                 │
└─────────────────────────────────────────────────────────────────┘

📍 KEY DESIGN PRINCIPLES
┌─────────────────────────────────────────────────────────────────┐
│                                                                 │
│  🎯 NON-BLOCKING: Readline doesn't block streaming             │
│  🔄 EVENT-DRIVEN: User input triggers events                   │
│  🚩 FLAG-BASED: Simple boolean for state coordination          │
│  ⚡ REAL-TIME: Characters display immediately on arrival        │
│  🛡️ GRACEFUL: Clean exit without corruption                    │
│  🧹 CLEAN: Proper resource cleanup after streaming             │
│                                                                 │
└─────────────────────────────────────────────────────────────────┘
